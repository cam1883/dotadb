@using DotAPicker.Models
@model IEnumerable<Hero>

@{
    ViewBag.Title = "Heroes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.SelectedHeroID > 0)
    {

    } else
    {
        ViewBag.SelectedHeroID = Model.FirstOrDefault()?.ID ?? 0;
    }
}


<h1>Heroes</h1>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<input type="text" id="filterInput" onkeyup="filterFunction()" placeholder="Search hero name..." />
<select id="filterPreference" onchange="filterFunction()">
    <option value="">Search by hero preference</option>
    @foreach (string option in Enum.GetNames(typeof(HeroPreference)))
    {
        <option value="@option">@option</option>
    }
</select>
<table>
    <tr>
        <td><h4>Hero Options</h4></td>
        <td style="padding-left: 8px"><h4>Hero Details</h4></td>
    </tr>
    <tr>
        <td valign="top">
            <div class="scrolling-container">
                <div class="header-scrolling-container">
                    <div class="header-cell" style="min-width: 200px">Name</div>
                    <div class="header-cell" style="display:none">Alt Names</div>
                    <div class="header-cell">Preference</div>
                    <div class="header-cell">Actions</div>
                </div>
                <div class="data-scrolling-container" id="filterHeroTable">
                    @foreach (var hero in Model)
                    {
                        var rowClass = ViewBag.SelectedHeroID == hero.ID ? "data-row selected" : "data-row";
                        <div class="@rowClass" id="@hero.ID">
                            <div class="data-row-cell" style="min-width: 200px">@hero.Name</div>
                            <div class="data-row-cell" style="display:none">@hero.AltNames</div>
                            <div class="data-row-cell">@hero.Preference</div>
                            <div class="data-row-cell">@Html.ActionLink("(edit)", "Edit", new { id = hero.ID })</div>
                        </div>
                    }
                </div>
            </div>
        </td>
        <td rowspan="2" style="padding-left: 8px" valign="top">
            <div class="heroDetails"></div>
        </td>
    </tr>
    <tr>
        <td align="right" valign="top">
            <input id="newHeroBtn" type="button" value="New Hero" onclick="location.href='@Url.Action("Create")'" />
        </td>
    </tr>
</table>

<script>

    document.addEventListener('keyup', keyUp, false);

    function keyUp(e) {
        if (e.ctrlKey && e.keyCode == 13) {
            $('#newHeroBtn').click();
        }
    }

    $('.data-row').click(function () {
        $(this).addClass('selected').siblings().removeClass('selected');
        $('.heroDetails').load('@Url.Action("Detail", "Hero")?id=' + this.id);
    });

    //Make the first hero auto-load
    $('.heroDetails').load('@Url.Action("Detail", "Hero")?id=' + @ViewBag.SelectedHeroID);

    https://www.w3schools.com/howto/howto_js_filter_table.asp
    function filterFunction() {
        // Declare variables
        var input, filter, table, tr, i, searchPreference, td_preference, td_altNames, td_hero_Name;
        input = document.getElementById("filterInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("filterHeroTable");
        tr = table.getElementsByTagName("data-row");
        searchPreference = document.getElementById("filterPreference").value;

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 1; i < tr.length; i++) {
            td_heroName = tr[i].getElementsByTagName("data-row-cell")[0].innerHTML.toUpperCase();
            td_altNames = tr[i].getElementsByTagName("data-row-cell")[1].innerHTML.toUpperCase();
            td_preference = tr[i].getElementsByTagName("data-row-cell")[2].innerHTML;

            if (td_heroName) {
                if ((td_heroName.indexOf(filter) > -1 ||
                    td_altNames.indexOf(filter) > -1) &&
                    (searchPreference == "" || td_preference == searchPreference)) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>