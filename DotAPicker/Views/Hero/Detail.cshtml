@using DotAPicker.Models;
@model HeroDetailViewModel

<table id="detailLeftTable">
    <tr>
        <td>ID</td>
        <td>@Model.Hero.ID</td>
    </tr>
    <tr>
        <td>Alt. Names</td>
        <td>@Model.Hero.AltNames</td>
    </tr>
    <tr>
        <td>Notes</td>
        <td>@Model.Hero.Notes</td>
    </tr>
</table>

<h4>Tips</h4>@Html.ActionLink("(new)", "Create", "Tip", new { heroID = Model.Hero.ID, returnToHeroList = true }, new { })
<table id="detailTable">
    <tr>
        <td>Type</td>
        <td>Text</td>
        <td>Source</td>
    </tr>
    @foreach(Tip t in Model.Tips)
    {
        <tr>
            <td>@t.Type</td>
            <td>@t.Text</td>
            <td>@t.Source</td>
        </tr>
    }
</table>

<h4>Relationships</h4>@Html.ActionLink("(new)", "Create", "Relationship", new { heroID = Model.Hero.ID }, new { })
<table id="detailTable">
    <tr>
        <td>Hero</td>
        <td>Type</td>
        <td>Text</td>
        <td>Source</td>
    </tr>
    @foreach (var r in Model.Relationships)
    {
        var heroName = r.Hero1ID == Model.Hero.ID ? r.Hero2.Name : r.Hero1.Name;
        <tr>
            <td>@heroName</td>
            <td>@r.Type</td>
            <td>@r.Description</td>
            <td>@r.Source</td>
        </tr>
    }
</table>