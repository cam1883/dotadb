@using DotAPicker.Models;
@model HeroDetailViewModel

<div class="hor-title-header-row">
    <div class="hor-title-header-cell">ID</div>
    <div class="hor-title-header-cell" style="min-width: 250px">Alt Names</div>
</div>
<div class="hor-data-row">
    <div class="hor-data-cell">@Model.Hero.ID</div>
    <div class="hor-data-cell" style="min-width: 300px">@Model.Hero.AltNames</div>
</div>
<div class="hor-data-row" style="max-width: 400px;">
    <span class="hor-data-cell" style="min-width: 400px; max-width: 400px; min-height: 100px; max-height: 300px">
        @Html.EditorFor(m => m.Hero.Notes, new { htmlAttributes = new { @class = "form-control" } })
    </span>
</div>


<h4>Tips</h4>@Html.ActionLink("(new)", "Create", "Tip", new { heroID = Model.Hero.ID, returnToHeroList = true }, new { })
<table id="detailTable">
    <tr>
        <td>Type</td>
        <td>Text</td>
        <td>Source</td>
    </tr>
    @foreach(Tip t in Model.Tips)
    {
        <tr>
            <td>@t.Type</td>
            <td>@t.Text</td>
            <td>@t.Source</td>
        </tr>
    }
</table>

<h4>Relationships</h4>@Html.ActionLink("(new)", "Create", "Relationship", new { heroID = Model.Hero.ID, returnToHeroList = true }, new { })
<table id="detailTable">
    <tr>
        <td>Hero</td>
        <td>Type</td>
        <td>Text</td>
        <td>Source</td>
    </tr>
    @foreach (var r in Model.Relationships)
    {
        var heroName = r.Hero1ID == Model.Hero.ID ? r.Hero2.Name : r.Hero1.Name;
        <tr>
            <td>@heroName</td>
            <td>@r.Type</td>
            <td>@r.Description</td>
            <td>@r.Source</td>
        </tr>
    }
</table>